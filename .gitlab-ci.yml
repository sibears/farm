stages:
  - test
  - build
  - release


test:
  stage: test
  image: rust
  services:
    - postgres:14.1-alpine
  variables:
    POSTGRES_DB: flags
    POSTGRES_PASSWORD: sibears1cool
    POSTGRES_HOST_AUTH_METHOD: trust
  script:
    - cargo test

build:
  stage: build
  image: docker:24.0.7
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  services:
    - docker:24.0.7-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

prepare_job:
  stage: release
  image: docker:24.0.7
  needs:
    - job: build
  services:
    - docker:24.0.7-dind
  variables:
    RELEASE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    LATEST_TAG: $CI_REGISTRY_IMAGE:latest
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $IMAGE_TAG
    - docker tag $IMAGE_TAG $LATEST_TAG
    - docker tag $IMAGE_TAG $RELEASE_TAG
    - docker push $RELEASE_TAG
    - docker push $LATEST_TAG
  rules:
    - if: $CI_COMMIT_TAG

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: prepare_job
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "running release_job for $CI_COMMIT_TAG"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Стабильный релиз'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_SHA'
